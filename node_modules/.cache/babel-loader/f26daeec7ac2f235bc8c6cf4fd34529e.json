{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/projekt/bridgestars-web/src/examples/Tables/Table/index.js\",\n    _s = $RefreshSig$();\n\n/*\n=========================================================\n* Otis Kit PRO - v2.0.0\n=========================================================\n\n* Product Page: https://material-ui.com/store/items/otis-kit-pro-material-kit-react/\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useMemo } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // uuid is a library for generating unique id\n\nimport { v4 as uuidv4 } from \"uuid\"; // @mui material components\n\nimport MuiTable from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\"; // Otis Kit PRO components\n\nimport MKBox from \"components/MKBox\";\nimport MKAvatar from \"components/MKAvatar\";\nimport MKTypography from \"components/MKTypography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table(_ref) {\n  _s();\n\n  let {\n    columns,\n    rows\n  } = _ref;\n  const renderColumns = columns.map((_ref2, key) => {\n    let {\n      name,\n      align,\n      width\n    } = _ref2;\n    let pl;\n    let pr;\n\n    if (key === 0) {\n      pl = 3;\n      pr = 3;\n    } else if (key === columns.length - 1) {\n      pl = 3;\n      pr = 3;\n    } else {\n      pl = 1;\n      pr = 1;\n    }\n\n    return /*#__PURE__*/_jsxDEV(MKBox, {\n      component: \"th\",\n      width: width || \"auto\",\n      pt: 1.5,\n      pb: 1.25,\n      pl: align === \"left\" ? pl : 3,\n      pr: align === \"right\" ? pr : 3,\n      textAlign: align,\n      color: \"secondary\",\n      opacity: 0.7,\n      sx: _ref3 => {\n        let {\n          typography: {\n            size,\n            fontWeightBold\n          },\n          borders: {\n            borderWidth,\n            borderColor\n          }\n        } = _ref3;\n        return {\n          fontSize: size.xxs,\n          fontWeight: fontWeightBold,\n          borderBottom: `${borderWidth[1]} solid ${borderColor}`\n        };\n      },\n      children: name.toUpperCase()\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  });\n  const renderRows = rows.map((row, key) => {\n    const rowKey = `row-${key}`;\n    const tableRow = columns.map(_ref4 => {\n      let {\n        name,\n        align\n      } = _ref4;\n      let template;\n\n      if (Array.isArray(row[name])) {\n        template = /*#__PURE__*/_jsxDEV(MKBox, {\n          component: \"td\",\n          p: 1,\n          sx: _ref5 => {\n            let {\n              borders: {\n                borderWidth,\n                borderColor\n              }\n            } = _ref5;\n            return {\n              borderBottom: row.hasBorder ? `${borderWidth[1]} solid ${borderColor}` : 0\n            };\n          },\n          children: /*#__PURE__*/_jsxDEV(MKBox, {\n            display: \"flex\",\n            alignItems: \"center\",\n            py: 0.5,\n            px: 1,\n            children: [/*#__PURE__*/_jsxDEV(MKBox, {\n              mr: 2,\n              children: /*#__PURE__*/_jsxDEV(MKAvatar, {\n                src: row[name][0],\n                name: row[name][1],\n                variant: \"rounded\",\n                size: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MKTypography, {\n              variant: \"button\",\n              fontWeight: \"medium\",\n              sx: {\n                width: \"max-content\"\n              },\n              children: row[name][1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this);\n      } else {\n        template = /*#__PURE__*/_jsxDEV(MKBox, {\n          component: \"td\",\n          p: 1,\n          textAlign: align,\n          sx: _ref6 => {\n            let {\n              borders: {\n                borderWidth,\n                borderColor\n              }\n            } = _ref6;\n            return {\n              borderBottom: row.hasBorder ? `${borderWidth[1]} solid ${borderColor}` : 0\n            };\n          },\n          children: /*#__PURE__*/_jsxDEV(MKTypography, {\n            variant: \"button\",\n            fontWeight: \"regular\",\n            color: \"secondary\",\n            sx: {\n              display: \"inline-block\",\n              width: \"max-content\"\n            },\n            children: row[name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this);\n      }\n\n      return template;\n    });\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      children: tableRow\n    }, rowKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 12\n    }, this);\n  });\n  return useMemo(() => /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: /*#__PURE__*/_jsxDEV(MuiTable, {\n      children: [/*#__PURE__*/_jsxDEV(MKBox, {\n        component: \"thead\",\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: renderColumns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: renderRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 7\n  }, this), [columns, rows]);\n} // Setting default values for the props of Table\n\n\n_s(Table, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n\n_c = Table;\nTable.defaultProps = {\n  columns: [],\n  rows: [{}]\n}; // Typechecking props for the Table\n\nTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.object),\n  rows: PropTypes.arrayOf(PropTypes.object)\n};\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/macbook/Documents/projekt/bridgestars-web/src/examples/Tables/Table/index.js"],"names":["useMemo","PropTypes","v4","uuidv4","MuiTable","TableBody","TableContainer","TableRow","MKBox","MKAvatar","MKTypography","Table","columns","rows","renderColumns","map","key","name","align","width","pl","pr","length","typography","size","fontWeightBold","borders","borderWidth","borderColor","fontSize","xxs","fontWeight","borderBottom","toUpperCase","renderRows","row","rowKey","tableRow","template","Array","isArray","hasBorder","display","defaultProps","propTypes","arrayOf","object"],"mappings":"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","sourcesContent":["/*\n=========================================================\n* Otis Kit PRO - v2.0.0\n=========================================================\n\n* Product Page: https://material-ui.com/store/items/otis-kit-pro-material-kit-react/\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// uuid is a library for generating unique id\nimport { v4 as uuidv4 } from \"uuid\";\n\n// @mui material components\nimport MuiTable from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\n\n// Otis Kit PRO components\nimport MKBox from \"components/MKBox\";\nimport MKAvatar from \"components/MKAvatar\";\nimport MKTypography from \"components/MKTypography\";\n\nfunction Table({ columns, rows }) {\n  const renderColumns = columns.map(({ name, align, width }, key) => {\n    let pl;\n    let pr;\n\n    if (key === 0) {\n      pl = 3;\n      pr = 3;\n    } else if (key === columns.length - 1) {\n      pl = 3;\n      pr = 3;\n    } else {\n      pl = 1;\n      pr = 1;\n    }\n\n    return (\n      <MKBox\n        key={name}\n        component=\"th\"\n        width={width || \"auto\"}\n        pt={1.5}\n        pb={1.25}\n        pl={align === \"left\" ? pl : 3}\n        pr={align === \"right\" ? pr : 3}\n        textAlign={align}\n        color=\"secondary\"\n        opacity={0.7}\n        sx={({ typography: { size, fontWeightBold }, borders: { borderWidth, borderColor } }) => ({\n          fontSize: size.xxs,\n          fontWeight: fontWeightBold,\n          borderBottom: `${borderWidth[1]} solid ${borderColor}`,\n        })}\n      >\n        {name.toUpperCase()}\n      </MKBox>\n    );\n  });\n\n  const renderRows = rows.map((row, key) => {\n    const rowKey = `row-${key}`;\n\n    const tableRow = columns.map(({ name, align }) => {\n      let template;\n\n      if (Array.isArray(row[name])) {\n        template = (\n          <MKBox\n            key={uuidv4()}\n            component=\"td\"\n            p={1}\n            sx={({ borders: { borderWidth, borderColor } }) => ({\n              borderBottom: row.hasBorder ? `${borderWidth[1]} solid ${borderColor}` : 0,\n            })}\n          >\n            <MKBox display=\"flex\" alignItems=\"center\" py={0.5} px={1}>\n              <MKBox mr={2}>\n                <MKAvatar src={row[name][0]} name={row[name][1]} variant=\"rounded\" size=\"sm\" />\n              </MKBox>\n              <MKTypography variant=\"button\" fontWeight=\"medium\" sx={{ width: \"max-content\" }}>\n                {row[name][1]}\n              </MKTypography>\n            </MKBox>\n          </MKBox>\n        );\n      } else {\n        template = (\n          <MKBox\n            key={uuidv4()}\n            component=\"td\"\n            p={1}\n            textAlign={align}\n            sx={({ borders: { borderWidth, borderColor } }) => ({\n              borderBottom: row.hasBorder ? `${borderWidth[1]} solid ${borderColor}` : 0,\n            })}\n          >\n            <MKTypography\n              variant=\"button\"\n              fontWeight=\"regular\"\n              color=\"secondary\"\n              sx={{ display: \"inline-block\", width: \"max-content\" }}\n            >\n              {row[name]}\n            </MKTypography>\n          </MKBox>\n        );\n      }\n\n      return template;\n    });\n\n    return <TableRow key={rowKey}>{tableRow}</TableRow>;\n  });\n\n  return useMemo(\n    () => (\n      <TableContainer>\n        <MuiTable>\n          <MKBox component=\"thead\">\n            <TableRow>{renderColumns}</TableRow>\n          </MKBox>\n          <TableBody>{renderRows}</TableBody>\n        </MuiTable>\n      </TableContainer>\n    ),\n    [columns, rows]\n  );\n}\n\n// Setting default values for the props of Table\nTable.defaultProps = {\n  columns: [],\n  rows: [{}],\n};\n\n// Typechecking props for the Table\nTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.object),\n  rows: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}